#!/usr/bin/env bash

# blscd
# Copyright (C) 2014 D630, GNU GPLv3
# <https://github.com/D630/blscd>

# Fork and rewrite in GNU bash of lscd v0.1 [2014, GNU GPLv3] by Roman
# Zimbelmann aka. hut, <https://github.com/hut/lscd>

# -- DEBUGGING.

#printf '%s (%s)\n' "$BASH_VERSION" "${BASH_VERSINFO[5]}" && exit 0
#set -o xtrace #;exec 2>> ~/blscd.log
#set -o verbose
#set -o noexec
#set -o errexit
#set -o nounset
#set -o pipefail
#trap '(read -p "[$BASH_SOURCE:$LINENO] $BASH_COMMAND?")' DEBUG

# -- SETTINGS.

#declare vars_base=$(set -o posix ; set)

# -- FUNCTIONS.

__blscd_f_version() { echo "0.1.2.7" ; }

__blscd_f_help()
{
    printf "usage: [source] blscd [-v | --version | -h | --help]

    Key bindings
      ^B    [ PAGE-UP ]     Move page up
      d                     Move five lines down
      D                     Move ten lines down
      E                     Edit the current file in '<EDITOR>' (fallback:
                            'vi')
      ^F    [ PAGE-DOWN ]   Move page down
      gd                    Move to /dev
      ge                    Move to /etc
      G     [ END ]         Move to bottom
      gg    [ HOME ]        Move to top
      gh                    Move to <HOME>
      gl                    Move to /usr/lib
      gL                    Move to /var/log
      gm                    Move to /media
      gM                    Move to /mnt
      go                    Move to /opt
      g?                    Open this help in '<PAGER>' (fallback: 'less')
      gr    [ g/ ]          Move to /
      gs                    Move to /srv
      gu                    Move to /usr
      gv                    Move to /var
      h     [ LEFTARROW ]   Move left
      j     [ DOWNARROW ]   Move down
      J                     Move half page down
      K                     Move half page up
      k     [ UPARROW ]     Move up
      ^L                    Redraw the screen
      l     [ RIGHTARROW ]  Move right
      n                     Go to next file. By default, go to newest
                            file; but after 'search' go to next match
      N                     Go to previous file
      :                     Open the console
      q                     Quit
      ^R                    Reload everything
      /                     Search for files in the current directory
                            (like console command 'search')
      S                     Fork a shell in the current directory
      SPACE                 Toggle the mark-status of a file
      u                     Move five lines up
      U                     Move ten lines up
      vn                    Unmark all files
      vv                    Toggle the mark-status of all files

    File type indicators
      b                     File is a block device
      c                     File is a character device
      -                     File is a regular file
      @                     File is a symbolic link
      |                     File is a named pipe
      =                     File is a socket
      *                     File is a regular file and is executable

    Console Commands
      During line editing in the console you may use your configured
      Readline key bindings, just as well the other features of it
      ('read -e' obtains the line in an interactive shell).

      search '<PATTERN>'    Search for files in the current directory,
                            that match the given (case insensitive)
                            regular expression pattern (regextype is
                            'posix-egrep')
"
}

__blscd_p_build_array()
{
    builtin declare -i i=
    builtin declare path=

    for i
    do
        case $i in
            1)
                if [[ $_blscd_dir_col_1_string == / ]]
                then
                    _blscd_files_col_1_array=(\~)
                    _blscd_files_col_1_array_cursor_index=0
                else
                    _blscd_files_col_1_array=()
                    while IFS=\' builtin read -r _ path
                    do
                        _blscd_files_col_1_array+=("$path")
                    done < <(builtin printf '%s\n' \
                        "${_blscd_data[ls ${dir_col_0_string}]}")
                fi
                _blscd_files_col_1_array_total=${#_blscd_files_col_1_array[@]}
                ;;
            2)
                [[ ! ${_blscd_data[ls ${_blscd_dir_col_1_string}]} ]] && \
                    __blscd_p_build_array_update
                _blscd_files_col_2_array=()
                while IFS=\' builtin read -r _ path
                do
                    _blscd_files_col_2_array+=("$path")
                done < <(builtin printf '%s\n' \
                    "${_blscd_data[ls ${_blscd_dir_col_1_string}]}")
                _blscd_files_col_2_array_total=${#_blscd_files_col_2_array[@]}
                ((_blscd_files_col_2_array_total == 0)) && \
                    _blscd_files_col_2_array_total=1
                [[ ! ${_blscd_data[mark ${_blscd_dir_col_1_string}/${_blscd_files_col_2_array[0]}]} ]] && \
                    __blscd_p_build_array_mark_update
                ;;
            3)
                if [[ ${_blscd_data[ls ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}]} ]]
                then
                    _blscd_files_col_3_array=()
                    while IFS=\' builtin read -r _ path
                    do
                        _blscd_files_col_3_array+=("$path")
                    done < <(builtin printf '%s\n' \
                        "${_blscd_data[ls ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}]}")
                else
                    builtin mapfile -t _blscd_files_col_3_array \
                        < <(command ls -1 -A --color=never "$_blscd_screen_lines_current_string")
                fi
                _blscd_files_col_3_array_total=${#_blscd_files_col_3_array[@]}
                ((_blscd_files_col_3_array_total == 0)) &&
                {
                    _blscd_files_col_3_array=("$(command file --mime-type \
                        -bL "$_blscd_screen_lines_current_string")")
                    _blscd_files_col_3_array=("${_blscd_files_col_3_array[@]//\//-}")
                    _blscd_files_col_3_array_total=1
                }
                ;;
        esac
    done
}

__blscd_p_build_array_ini()
{
    __blscd_p_build_array_ini_do()
    {
        builtin declare dir=$1
        _blscd_data[ls ${dir}]=$(command ls --format=long -AL \
                --time-style=+%s -gGho --color=none \
                --indicator-style=none -b --quoting-style=shell-always "$dir")
        _blscd_data[ls ${dir}]=${_blscd_data[ls ${dir}]#*$'\n'}
        _blscd_data[mark ${dir}]=unmarked
        if [[ ${dir%/*} ]]
        then
            __blscd_p_build_array_ini_do "${dir%/*}"
        else
            builtin return 0
        fi
    }

    _blscd_data[ls /]=$(command ls --format=long -AL \
            --time-style=+%s -gGho --color=none \
            --indicator-style=none -b --quoting-style=shell-always /)
    _blscd_data[ls /]=${_blscd_data[ls /]#*$'\n'}
    _blscd_data[mark /]=unmarked

    __blscd_p_build_array_ini_do "$_blscd_dir_col_1_string"
    __blscd_p_build_array_mark_update
}

__blscd_p_build_array_mark_search()
{
    while builtin read -r
    do
        [[ $REPLY =~ ^[0-9]*:.*$ ]] && \
            _blscd_data[mark ${_blscd_dir_col_1_string}/${REPLY#*:}]=marked && \
            _blscd_data[search ${_blscd_dir_col_1_string}/${REPLY#*:}]=$REPLY && \
            _blscd_files_col_2_array_mark_indexes+=(${REPLY%%:*})
    done < <(builtin printf '%s\n' "${_blscd_files_col_2_array[@]}" | \
        command egrep -i -n -C "${#_blscd_files_col_2_array[@]}" \
                -e "$_blscd_search_pattern")

    __blscd_p_mark_screen_lines_prepare
    __blscd_p_set_marking_number
}

__blscd_p_build_array_mark_search_update()
{
    _blscd_files_col_2_array_mark_indexes=()

    builtin declare i=

    for i in "${!_blscd_data[@]}"
    do
        [[ $i =~ ^search..*$ ]] && \
            _blscd_files_col_2_array_mark_indexes+=(${_blscd_data[$i]%%:*})
    done

    __blscd_p_mark_screen_lines_prepare
}

__blscd_p_build_array_mark_update()
{
    builtin declare \
        path= \
        s1= \
        s2=

    builtin declare -i i=

    while IFS=\' builtin read -r
    do
        ((++i))
        IFS=\' builtin read -r s1 s2 <<<"$REPLY"
        builtin set -- $s1
        path=${s2//\'/}
        _blscd_data[mark ${_blscd_dir_col_1_string}/${path}]=unmarked
        _blscd_data[time ${_blscd_dir_col_1_string}/${path}]=$4
        _blscd_data[size ${_blscd_dir_col_1_string}/${path}]=$3
        _blscd_data[index ${_blscd_dir_col_1_string}/${path}]=$i
        if [[ -L ${path} ]]
        then
            _blscd_data[type ${_blscd_dir_col_1_string}/${path}]=@
        elif [[ -b ${path} ]]
        then
            _blscd_data[type ${_blscd_dir_col_1_string}/${path}]=b
        elif [[ -c ${path} ]]
        then
            _blscd_data[type ${_blscd_dir_col_1_string}/${path}]=c
        elif [[ -p ${path} ]]
        then
            _blscd_data[type ${_blscd_dir_col_1_string}/${path}]=\|
        elif [[ -S ${path} ]]
        then
            _blscd_data[type ${_blscd_dir_col_1_string}/${path}]=\=
        elif [[ -d ${path} ]]
        then
            _blscd_data[type ${_blscd_dir_col_1_string}/${path}]=/
        elif [[ -f ${path} && -x ${path} ]]
        then
            _blscd_data[type ${_blscd_dir_col_1_string}/${path}]=\*
        else
            _blscd_data[type ${_blscd_dir_col_1_string}/${path}]=-
        fi
    done < <(builtin printf '%s\n' "${_blscd_data[ls ${_blscd_dir_col_1_string}]}")
}

__blscd_p_build_array_time()
{
    builtin declare i=

    builtin mapfile -t _blscd_files_col_2_array_time \
        < <(__blscd_f_order_num_asc "$(for i in "${!_blscd_data[@]}"
            do
                [[ $i =~ ^time..*$ ]] && \
                    builtin printf '%d000%d\n' "${_blscd_data[$i]}" "${_blscd_data[index ${i#* }]}"
            done)")
}

__blscd_p_build_array_update()
{
    _blscd_data[ls ${_blscd_dir_col_1_string}]=$(command ls --format=long \
            -AL --time-style=+%s -gGho --color=none \
            --indicator-style=none -b \
            --quoting-style=shell-always "$_blscd_dir_col_1_string")
    _blscd_data[ls ${_blscd_dir_col_1_string}]=${_blscd_data[ls ${_blscd_dir_col_1_string}]#*$'\n'}
    __blscd_p_build_array_mark_update
}

__blscd_p_build_col()
{
    builtin declare i=

    for i
    do
        case $i in
            1a)
                if [[ $_blscd_dir_col_1_string == / ]]
                then
                    _blscd_files_col_1_a_array=(\~)
                    _blscd_highlight_line_col_1_index=0
                elif [[ ${_blscd_data[cursor ${dir_col_0_string}]} ]]
                then
                    builtin mapfile -t _blscd_files_col_1_a_array \
                        < <(builtin printf '%s\n' \
                                "${_blscd_files_col_1_array[@]:$((${_blscd_data[cindex ${dir_col_0_string}]} - 1)):${_blscd_screen_lines_browser}}")
                    _blscd_highlight_line_col_1_index=${_blscd_data[cursor ${dir_col_0_string}]}
                else
                    IFS=: builtin read -r _blscd_files_col_1_array_cursor_index _ \
                        < <(builtin printf '%s\n' "${_blscd_files_col_1_array[@]}" | \
                                command grep -x -n "${_blscd_dir_col_1_string##*/}")
                    ((--_blscd_files_col_1_array_cursor_index))
                    if ((_blscd_files_col_1_array_cursor_index >= _blscd_screen_lines_browser))
                    then
                        _blscd_files_col_1_a_array=("${_blscd_files_col_1_array[@]:$((_blscd_files_col_1_array_cursor_index - _blscd_screen_lines_browser + 1)):${_blscd_files_col_1_array_cursor_index}}")
                        _blscd_highlight_line_col_1_index=$((_blscd_screen_lines_browser - 1))
                    else
                        _blscd_files_col_1_a_array=("${_blscd_files_col_1_array[@]:0:${_blscd_screen_lines_browser}}")
                        _blscd_highlight_line_col_1_index=$_blscd_files_col_1_array_cursor_index
                    fi
                fi
                _blscd_files_col_1_a_array_total=${#_blscd_files_col_1_a_array[@]}
                ;;
            2a)
                [[ $_blscd_search_pattern && ! $_blscd_block == _blscd_block ]] && \
                    __blscd_p_build_array_mark_search
                if [[ ${_blscd_data[cursor ${_blscd_dir_col_1_string}]} && \
                        $_blscd_action_last != __blscd_p_move_col_2_line ]]
                then
                     builtin mapfile -t _blscd_files_col_2_a_array \
                        < <(builtin printf '%s\n' \
                            "${_blscd_files_col_2_array[@]:$((${_blscd_data[cindex ${_blscd_dir_col_1_string}]} - 1)):${_blscd_screen_lines_browser}}")
                     _blscd_cursor=${_blscd_data[cursor ${_blscd_dir_col_1_string}]}
                     _blscd_index=${_blscd_data[cindex ${_blscd_dir_col_1_string}]}
                elif [[ $_blscd_dir_col_1_string == / && $_blscd_dir_last ]]
                then
                     builtin mapfile -t _blscd_files_col_2_a_array \
                        < <(builtin printf '%s\n' \
                                "${_blscd_files_col_2_array[@]:$((${_blscd_data[cindex ${_blscd_dir_last}]} - 1)):${_blscd_screen_lines_browser}}")
                else
                    _blscd_files_col_2_a_array=("${_blscd_files_col_2_array[@]:$((_blscd_index - 1)):${_blscd_screen_lines_browser}}")
                fi
                ;;
            3a)
                if [[ ${_blscd_data[cursor ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}]} ]]
                then
                    builtin mapfile -t _blscd_files_col_3_a_array \
                        < <(builtin printf '%s\n' \
                                "${_blscd_files_col_3_array[@]:$((${_blscd_data[cindex ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}]} - 1)):${_blscd_screen_lines_browser}}")
                    _blscd_highlight_line_col_3_index=${_blscd_data[cursor ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}]}
                else
                    _blscd_files_col_3_a_array=("${_blscd_files_col_3_array[@]}")
                    _blscd_highlight_line_col_3_index=0
                fi
                ;;
        esac
    done
}

__blscd_p_declare_set()
{
    builtin declare -gA _blscd_data

    builtin declare -gi \
        _blscd_cursor=0 \
        _blscd_files_col_1_a_array_total= \
        _blscd_files_col_1_a_array_total= \
        _blscd_files_col_1_array_total= \
        _blscd_files_col_2_array_total= \
        _blscd_files_col_3_array_total= \
        _blscd_highlight_line_col_1_index= \
        _blscd_highlight_line_col_3_index= \
        _blscd_index=1 \
        _blscd_marking_number= \
        _blscd_redraw_number=0 \
        _blscd_screen_lines_browser_col_2_visible= \
        _blscd_screen_lines_offset=4

    builtin declare -g \
        _blscd_action_last= \
        _blscd_block= \
        _blscd_console_command_name= \
        _blscd_dir_col_1_string=$PWD \
        _blscd_dir_last= \
        _blscd_input= \
        _blscd_k1= \
        _blscd_k2= \
        _blscd_k3= \
        _blscd_marking= \
        _blscd_redraw=_blscd_redraw \
        _blscd_reprint=_blscd_reprint \
        _blscd_screen_lines_browser= \
        _blscd_screen_lines_current_string= \
        _blscd_screen_lines_titlebar_string=

    builtin declare -ga \
        "_blscd_files_col_1_a_array=()" \
        "_blscd_files_col_1_array=()" \
        "_blscd_files_col_2_a_array=()" \
        "_blscd_files_col_2_array=()" \
        "_blscd_files_col_2_array_mark_indexes=()" \
        "_blscd_files_col_2_array_time=()" \
        "_blscd_files_col_3_a_array=()" \
        "_blscd_files_col_3_array=()"

    # Initialize settings.
    builtin declare -g \
        _blscd_opener='builtin export LESSOPEN='"| /usr/bin/lesspipe %s"';command less -R "$1"' \
        _blscd_search_pattern=

    builtin declare -gi _blscd_INT_step=6

    # Tput configuration.
    {
        builtin declare -g \
            "_blscd_tput_alt=$(command tput smcup || command tput ti)" \
            "_blscd_tput_am_off=$(command tput rmam)" \
            "_blscd_tput_am_on=$(command tput am)" \
            "_blscd_tput_bold=$(command tput bold || command tput md)" \
            "_blscd_tput_clear=$(command tput clear)" \
            "_blscd_tput_cup_1_0=$(command tput cup 1 0)" \
            "_blscd_tput_cup_2_0=$(command tput cup 2 0)" \
            "_blscd_tput_cup_99999_0=$(command tput cup 99999 0)" \
            "_blscd_tput_ealt=$(command tput rmcup || command tput te)" \
            "_blscd_tput_eel=$(command tput el || command tput ce)" \
            "_blscd_tput_hide=$(command tput civis || command tput vi)" \
            "_blscd_tput_home=$(command tput home)" \
            "_blscd_tput_reset=$(command tput sgr0 || command tput me)" \
            "_blscd_tput_show=$(command tput cnorm || command tput ve)" \
            "_blscd_tput_white_f=$(command tput setaf 7 || command tput AF 7)"
    } 2>/dev/null

    [[ $TERM != *-m ]] &&
    {
        builtin declare -g \
            "_blscd_tput_black_f=$(command tput setaf 0)" \
            "_blscd_tput_blue_f=$(command tput setaf 4|| command tput AF 4)" \
            "_blscd_tput_green_b=$(command tput setab 2)" \
            "_blscd_tput_green_f=$(command tput setaf 2 || command tput AF 2)" \
            "_blscd_tput_red_b=$(command tput setab 1)" \
            "_blscd_tput_white_b=$(command tput setab 7)" \
            "_blscd_tput_yellow_b=$(command tput setab 3)" \
            "_blscd_tput_yellow_f=$(command tput setaf 3)"

    } 2>/dev/null

    # Save the terminal environment of the normal screen.
    builtin declare -g \
        "_blscd_saved_stty=$(command stty -g)" \
        "_blscd_saved_traps=$(builtin trap)"

    builtin declare -gx \
        _blscd_LC_ALL_old=$LC_ALL \
        LC_ALL=C.UTF-8
}

__blscd_p_declare_unset()
{
    builtin unset -v \
        _blscd_action_last \
        _blscd_block \
        _blscd_console_command_name \
        _blscd_cursor \
        _blscd_data \
        _blscd_dir_col_1_string \
        _blscd_dir_last \
        _blscd_files_col_1_a_array \
        _blscd_files_col_1_a_array_total \
        _blscd_files_col_1_a_array_total \
        _blscd_files_col_1_array \
        _blscd_files_col_1_array_total \
        _blscd_files_col_2_a_array \
        _blscd_files_col_2_array \
        _blscd_files_col_2_array_mark_indexes \
        _blscd_files_col_2_array_time \
        _blscd_files_col_2_array_total \
        _blscd_files_col_3_a_array \
        _blscd_files_col_3_array \
        _blscd_files_col_3_array_total \
        _blscd_highlight_line_col_1_index \
        _blscd_highlight_line_col_3_index \
        _blscd_index \
        _blscd_input \
        _blscd_INT_step \
        _blscd_k1 \
        _blscd_k2 \
        _blscd_k3 \
        _blscd_marking \
        _blscd_marking_number \
        _blscd_opener \
        _blscd_redraw \
        _blscd_redraw_number \
        _blscd_reprint \
        _blscd_saved_stty \
        _blscd_saved_traps \
        _blscd_screen_lines_browser \
        _blscd_screen_lines_browser_col_2_visible \
        _blscd_screen_lines_current_string \
        _blscd_screen_lines_offset \
        _blscd_screen_lines_titlebar_string \
        _blscd_search_pattern \
        _blscd_tput_alt \
        _blscd_tput_am_off \
        _blscd_tput_am_on \
        _blscd_tput_black_f \
        _blscd_tput_blue_f \
        _blscd_tput_bold \
        _blscd_tput_clear \
        _blscd_tput_cup_1_0 \
        _blscd_tput_cup_2_0 \
        _blscd_tput_cup_99999_0 \
        _blscd_tput_ealt \
        _blscd_tput_eel \
        _blscd_tput_green_b \
        _blscd_tput_green_f \
        _blscd_tput_hide \
        _blscd_tput_home \
        _blscd_tput_red_b \
        _blscd_tput_reset \
        _blscd_tput_show \
        _blscd_tput_white_b \
        _blscd_tput_white_f \
        _blscd_tput_yellow_b \
        _blscd_tput_yellow_f

    builtin unset -f \
        __blscd_f_draw_screen \
        __blscd_f_help \
        __blscd_f_list_file \
        __blscd_f_order_num_asc \
        __blscd_f_version \
        __blscd_p_build_array \
        __blscd_p_build_array_ini \
        __blscd_p_build_array_ini_do \
        __blscd_p_build_array_mark_search \
        __blscd_p_build_array_mark_search_update \
        __blscd_p_build_array_mark_update \
        __blscd_p_build_array_time \
        __blscd_p_build_array_update \
        __blscd_p_build_col \
        __blscd_p_declare_set \
        __blscd_p_declare_unset \
        __blscd_p_draw_screen_check \
        __blscd_p_draw_screen_lines \
        __blscd_p_edit_file \
        __blscd_p_mark_go_down \
        __blscd_p_mark_go_up \
        __blscd_p_mark_screen_lines_all \
        __blscd_p_mark_screen_lines_all_unmark \
        __blscd_p_mark_screen_lines_current \
        __blscd_p_mark_screen_lines_prepare \
        __blscd_p_move_col_2_line \
        __blscd_p_move_col_2_line_time_newest \
        __blscd_p_move_col_2_line_time_oldest \
        __blscd_p_move_dir \
        __blscd_p_move_dir_down \
        __blscd_p_move_dir_up \
        __blscd_p_on_exit \
        __blscd_p_open_console \
        __blscd_p_open_file \
        __blscd_p_open_shell \
        __blscd_p_reload \
        __blscd_p_search \
        __blscd_p_search_marking_non \
        __blscd_p_set_action_last \
        __blscd_p_set_marking_number \
        __blscd_p_set_resize

    builtin declare -xg LC_ALL=$_blscd_LC_ALL_old

    builtin unset -v _blscd_LC_ALL_old
}

__blscd_f_draw_screen()
{
    builtin declare -i \
        _blscd_highlight_line_col_3_index= \
        i= \
        j= \
        screen_col_1_length= \
        screen_col_2_length= \
        screen_col_2_1_length= \
        screen_col_2_2_length= \
        screen_col_3_length= \
        screen_dimension_cols= \
        screen_dimension_lines=

    builtin declare \
        dir_col_0_string= \
        screen_lines_browser_col_1_color_1= \
        screen_lines_browser_col_1_color_reset= \
        screen_lines_browser_col_2_color_1= \
        screen_lines_browser_col_2_color_mark= \
        screen_lines_browser_col_2_color_reset= \
        screen_lines_browser_col_3_color_1= \
        screen_lines_browser_col_3_color_reset= \
        screen_lines_statusbar_string= \
        statusbar10_string= \
        statusbar11_string= \
        statusbar12_string= \
        statusbar13_string= \
        statusbar1_string= \
        statusbar2_string= \
        statusbar3_string= \
        statusbar4_string= \
        statusbar5_string= \
        statusbar6_string= \
        statusbar7_string= \
        statusbar8_string= \
        statusbar9_string=

    # Get dimension.
    builtin read -r screen_dimension_cols screen_dimension_lines \
        <<<$(command tput -S < <(builtin printf '%s\n' cols lines))
    screen_col_1_length=$(((screen_dimension_cols - 2) / 5))
    screen_col_3_length=$((screen_col_1_length * 2))
    screen_col_2_1_length=3
    screen_col_2_2_length=5
    screen_col_2_length=$(((screen_col_1_length * 2) - screen_col_2_1_length - screen_col_2_2_length))
    _blscd_screen_lines_browser=$((screen_dimension_lines - _blscd_screen_lines_offset + 1))

    # Save directories.
    _blscd_dir_col_1_string=$PWD
    dir_col_0_string=${_blscd_dir_col_1_string%/*}
    dir_col_0_string=${dir_col_0_string:-/}

    if [[ ($_blscd_reprint == _blscd_reprint && $_blscd_action_last != __blscd_p_move_col_2_line) || \
            ($_blscd_search_pattern && ! $_blscd_block == _blscd_block) || \
            ($_blscd_marking == _blscd_marking && ! $_blscd_block == _blscd_block) ]]
    then
        builtin printf "$_blscd_tput_clear"
        # Build column 1 and 2.
        __blscd_p_build_array 1 2
        __blscd_p_build_col 1a 2a
    else
        # Delete obsolete lines in column 3.
        if ((_blscd_files_col_3_array_total <= 15))
        then
            if ((_blscd_files_col_3_array_total < _blscd_screen_lines_browser))
            then
                i=$_blscd_files_col_3_array_total
            else
                i=$_blscd_screen_lines_browser
            fi
            for ((i=$i ; i > 1 ; --i))
            do
                #command tput cup "$i" "$((screen_col_1_length + screen_col_2_length + 2))"
                builtin printf "\033[$((i + 1));$((screen_col_1_length + screen_col_2_length + 3))H${_blscd_tput_eel}"
                #builtin printf "$_blscd_tput_eel"
            done
        else
            ((_blscd_files_col_3_array_total < _blscd_screen_lines_browser && \
                    _blscd_files_col_1_a_array_total > 5)) &&
            {
                builtin printf "$_blscd_tput_cup_2_0"
                for ((i=${_blscd_files_col_3_array_total} ; i < _blscd_screen_lines_browser ; ++i))
                do
                    builtin printf "%-${screen_col_1_length}.${screen_col_1_length}s\n" ""
                done
            }
        fi
       __blscd_p_build_col 2a
    fi

    # Save current line.
    _blscd_screen_lines_current_string=${_blscd_files_col_2_a_array[$_blscd_cursor]}

    # Build column 3.
    __blscd_p_build_array 3
    __blscd_p_build_col 3a

    # Save current _blscd_cursor postion, and _blscd_index.
    _blscd_data[cursor ${_blscd_dir_col_1_string}]=$_blscd_cursor
    _blscd_data[cindex ${_blscd_dir_col_1_string}]=$_blscd_index

    # Preparing for __blscd_p_move_col_2_line(): Determine the number of visible files.
    if ((_blscd_files_col_2_array_total > _blscd_screen_lines_browser))
    then
        _blscd_screen_lines_browser_col_2_visible=$_blscd_screen_lines_browser
    else
        _blscd_screen_lines_browser_col_2_visible=$_blscd_files_col_2_array_total
    fi

    # Print the titlebar.
    __blscd_p_draw_screen_lines 1
    builtin printf '%s\n' "${_blscd_screen_lines_titlebar_string//\/\//\/}"
    builtin printf "$_blscd_tput_reset"

    # Print the browser.
    builtin printf "$_blscd_tput_cup_1_0"
    for ((i=0 ; i <= _blscd_screen_lines_browser ; ++i))
    do
        screen_lines_browser_col_1_color_1=
        screen_lines_browser_col_1_color_reset=
        screen_lines_browser_col_2_color_1=
        screen_lines_browser_col_2_color_reset=
        screen_lines_browser_col_2_color_mark=
        screen_lines_browser_col_3_color_1=
        screen_lines_browser_col_3_color_reset=
        __blscd_p_draw_screen_lines 2
        builtin printf "${screen_lines_browser_col_1_color_1}%-${screen_col_1_length}.${screen_col_1_length}s${screen_lines_browser_col_1_color_reset} ${screen_lines_browser_col_2_color_mark}${screen_lines_browser_col_2_color_1}%-${screen_col_2_length}.${screen_col_2_length}s%${screen_col_2_1_length}s%${screen_col_2_2_length}s${screen_lines_browser_col_2_color_reset} ${screen_lines_browser_col_3_color_1}%-${screen_col_3_length}.${screen_col_3_length}s${screen_lines_browser_col_3_color_reset}\n" " ${_blscd_files_col_1_a_array[$i]} " " ${screen_lines_browser_col_2_color_mark:+ }${_blscd_files_col_2_a_array[$i]}" "${_blscd_data[type ${_blscd_dir_col_1_string}/${_blscd_files_col_2_a_array[$i]}]} " "${_blscd_data[size ${_blscd_dir_col_1_string}/${_blscd_files_col_2_a_array[$i]}]} " " ${_blscd_files_col_3_a_array[$i]} "
    done

    # Print the statusbar.
    builtin printf "${_blscd_tput_blue_f}${_blscd_tput_bold}"
    __blscd_p_draw_screen_lines 3
    builtin printf "%s${_blscd_tput_reset} %s %s %s %s %s${statusbar8_string:+ %s ->} %-$((screen_dimension_cols - ${#screen_lines_statusbar_string} + ${#statusbar7_string} ${statusbar8_string:++ $((${#statusbar8_string} - ${#statusbar7_string}))}))s  %s/%s  %d%% %s${statusbar13_string:+  %d}" "$statusbar1_string" "$statusbar2_string" "$statusbar3_string" "$statusbar4_string" "$statusbar5_string" "$statusbar6_string" "$statusbar7_string" ${statusbar8_string:+\"${statusbar8_string}\"} "$statusbar9_string" "$statusbar10_string" "$statusbar11_string" "$statusbar12_string" $statusbar13_string

    # Set new position of the _blscd_cursor.
    #builtin printf "$_blscd_tput_reset"
    #command tput cup "$((_blscd_cursor + 1))" "$((screen_col_1_length + 1))"
    builtin printf "${_blscd_tput_reset}\033[$((_blscd_cursor + 2));$((screen_col_1_length + 2))H"
}

__blscd_p_draw_screen_check()
{
    [[ $_blscd_redraw == _blscd_redraw ]] &&
    {
        __blscd_f_draw_screen
        __blscd_p_set_resize 0
        ((++_blscd_redraw_number))
    }
}

__blscd_p_draw_screen_lines()
{
    builtin declare -i j=
    builtin declare \
        path= \
        s=

    for j
    do
        case $j in
            1)
                if [[ ($_blscd_reprint == _blscd_reprint && $_blscd_action_last != __blscd_p_move_col_2_line) || \
                        $_blscd_marking == _blscd_marking || \
                        $_blscd_search_pattern ]]
                then
                    builtin printf "$_blscd_tput_home"
                    [[ $_blscd_block == _blscd_block ]] && builtin printf "$_blscd_tput_eel"
                    builtin printf -v _blscd_screen_lines_titlebar_string \
                            "${_blscd_tput_blue_f}${_blscd_tput_bold}%s@%s:${_blscd_tput_green_f}%s/${_blscd_tput_white_f}%s" \
                            "$USER" "$HOSTNAME" "$PWD" "$_blscd_screen_lines_current_string"
                else
                    if [[ $_blscd_dir_col_1_string == / ]]
                    then
                        #command tput cup 0 "$((${#USER} + ${#HOSTNAME} + ${#_blscd_dir_col_1_string} + 2))"
                        builtin printf "\033[0;$((${#USER} + ${#HOSTNAME} + ${#_blscd_dir_col_1_string} + 3))H"
                    else
                        #command tput cup 0 "$((${#USER} + ${#HOSTNAME} + ${#_blscd_dir_col_1_string} + 3))"
                        builtin printf "\033[0;$((${#USER} + ${#HOSTNAME} + ${#_blscd_dir_col_1_string} + 4))H"
                    fi
                    builtin printf -v _blscd_screen_lines_titlebar_string \
                            "${_blscd_tput_eel}${_blscd_tput_bold}${_blscd_tput_white_f}%s" \
                            "$_blscd_screen_lines_current_string"
                fi
                ;;
            2)
                ((i == _blscd_highlight_line_col_1_index)) &&
                {
                    screen_lines_browser_col_1_color_1=${_blscd_tput_bold}${_blscd_tput_black_f}${_blscd_tput_green_b}
                    screen_lines_browser_col_1_color_reset=$_blscd_tput_reset
                }
                ((i == _blscd_cursor)) &&
                {
                    if [[ ${_blscd_data[mark ${_blscd_dir_col_1_string}/${_blscd_files_col_2_a_array[$i]}]} == marked ]]
                    then
                        screen_lines_browser_col_2_color_1="${_blscd_tput_bold}${_blscd_tput_black_f}${_blscd_tput_yellow_b}"
                    else
                        if [[ -d $_blscd_screen_lines_current_string ]]
                        then
                            screen_lines_browser_col_2_color_1=${_blscd_tput_bold}${_blscd_tput_black_f}${_blscd_tput_green_b}
                        elif [[ -f $_blscd_screen_lines_current_string ]]
                        then
                            screen_lines_browser_col_2_color_1=${_blscd_tput_bold}${_blscd_tput_black_f}${_blscd_tput_white_b}
                        else
                            screen_lines_browser_col_2_color_1=${_blscd_tput_bold}${_blscd_tput_white_f}${_blscd_tput_red_b}
                        fi
                    fi
                    screen_lines_browser_col_2_color_reset=$_blscd_tput_reset
                }
                ((i == _blscd_highlight_line_col_3_index)) &&
                {
                    if [[ -d ${_blscd_screen_lines_current_string}/${_blscd_files_col_3_a_array[$i]} ]]
                    then
                        screen_lines_browser_col_3_color_1=${_blscd_tput_bold}${_blscd_tput_black_f}${_blscd_tput_green_b}
                    elif [[ -f ${_blscd_screen_lines_current_string}/${_blscd_files_col_3_a_array[$i]} ]]
                    then
                        screen_lines_browser_col_3_color_1=${_blscd_tput_bold}${_blscd_tput_black_f}${_blscd_tput_white_b}
                    else
                        screen_lines_browser_col_3_color_1=${_blscd_tput_bold}${_blscd_tput_white_f}${_blscd_tput_red_b}
                    fi
                    screen_lines_browser_col_3_color_reset=$_blscd_tput_reset
                }
                [[ $_blscd_search_pattern || $_blscd_marking == _blscd_marking ]] &&
                {
                    [[ ${_blscd_data[mark ${_blscd_dir_col_1_string}/${_blscd_files_col_2_a_array[$i]}]} == marked ]] &&
                    {
                        screen_lines_browser_col_2_color_mark="${_blscd_tput_bold}${_blscd_tput_yellow_f}"
                        screen_lines_browser_col_2_color_reset=$_blscd_tput_reset
                    }
                }
                ;;
            3)
                IFS=\' builtin read -r s path \
                    <<<$(command ls --format=long -Ad --time-style=long-iso -h \
                        --color=none --indicator-style=none -b --quoting-style=shell-always \
                        "${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}")
                builtin read -r statusbar1_string statusbar2_string statusbar3_string statusbar4_string \
                        statusbar5_string statusbar6_string statusbar7_string \
                    <<< "$s"
                [[ $path =~ -\> ]] && \
                    IFS=\' builtin read -r _ _ statusbar8_string \
                    <<<"$path"
                builtin read -r statusbar9_string statusbar10_string statusbar11_string \
                    <<<"$((_blscd_index + _blscd_cursor)) ${_blscd_files_col_2_array_total} \
                    $(((100 * (_blscd_index + _blscd_cursor)) / _blscd_files_col_2_array_total))"
                [[ -d ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string} ]] && \
                        statusbar13_string=$_blscd_files_col_3_array_total
                if [[ $_blscd_search_pattern || $_blscd_marking == _blscd_marking ]]
                then
                    statusbar12_string="${_blscd_marking_number} Mrk"
                elif ((_blscd_files_col_2_array_total <= _blscd_screen_lines_browser))
                then
                    statusbar12_string=All
                elif ((_blscd_files_col_2_array_total > _blscd_screen_lines_browser && \
                        _blscd_cursor + _blscd_index <= _blscd_screen_lines_browser_col_2_visible))
                then
                    statusbar12_string=Top
                elif ((_blscd_files_col_2_array_total > _blscd_screen_lines_browser && \
                    _blscd_cursor + _blscd_index >= _blscd_files_col_2_array_total - _blscd_screen_lines_browser + 1))
                then
                    statusbar12_string=Bot
                else
                    statusbar12_string=Mid
                fi
                #command tput cup "$((_blscd_screen_lines_browser + 1))" 0
                builtin printf "\033[$((_blscd_screen_lines_browser + 2));0H${_blscd_tput_eel}"
                #builtin printf "$_blscd_tput_eel"
                builtin printf -v screen_lines_statusbar_string "%s %s %s %s %s %s %s${statusbar8_string:+ -> %s}  %s/%s  %d%% %s${statusbar13_string:+  %d}" \
                        "$statusbar1_string" "$statusbar2_string" "$statusbar3_string" "$statusbar4_string" "$statusbar5_string" \
                        "$statusbar6_string" "$statusbar7_string" ${statusbar8_string:+"${statusbar8_string}"} "$statusbar9_string" \
                        "$statusbar10_string" "$statusbar11_string" "$statusbar12_string" $statusbar13_string
                ;;
        esac
    done
}

__blscd_p_edit_file()
{
    __blscd_p_set_action_last
    command "${EDITOR:-vi}" "$_blscd_screen_lines_current_string"
}

__blscd_f_list_file()
{
    __blscd_f_list_file_find()
    {
        command find -L "$_blscd_dir_col_1_string" -mindepth 1 -maxdepth 1 \
                \( -xtype l -type d -printf '%h/%f\0' \) \
                -o \( -xtype l -type f -printf '%h/%f\0' \) \
                -o \( -xtype d -type d -printf '%h/%f\0' \) \
                -o \( -xtype f -type f -printf '%h/%f\0' \) | \
            command sort -zbg
    }

    if [[ $1 ]]
    then
        __blscd_f_list_file_find | \
            command egrep --null-data -n -C 9999999 -e "$1"
    else
        __blscd_f_list_file_find
    fi
}

__blscd_p_mark_go_down()
{
    builtin declare -i i=

    if [[ ${_blscd_files_col_2_array_mark_indexes[@]} ]]
    then
        for i in "${_blscd_files_col_2_array_mark_indexes[@]}"
        do
            ((i > _blscd_index + _blscd_cursor)) &&
            {
                __blscd_p_move_col_2_line "$((i - _blscd_index - _blscd_cursor))"
                builtin break
            }
        done
    else
        _blscd_search_pattern=
        _blscd_files_col_2_array_mark_indexes=()
    fi
}

__blscd_p_mark_go_up()
{
    declare -i i=

    if [[ ${#_blscd_files_col_2_array_mark_indexes[@]} -gt 0 ]]
    then
        for (( i=${#_blscd_files_col_2_array_mark_indexes[@]}-1 ; i >= 0 ; i--))
        do
            ((${_blscd_files_col_2_array_mark_indexes[$i]} < _blscd_index + _blscd_cursor)) &&
            {
                __blscd_p_move_col_2_line "-$((_blscd_cursor + _blscd_index - ${_blscd_files_col_2_array_mark_indexes[$i]}))"
                builtin break
            }
        done
    else
        _blscd_search_pattern=
        _blscd_files_col_2_array_mark_indexes=()
    fi
}

__blscd_p_mark_screen_lines_all()
{
    builtin declare -i counter=0

    while builtin read -r
    do
        if [[ ${_blscd_data[mark ${_blscd_dir_col_1_string}/${REPLY}]} == marked ]]
        then
            _blscd_data[mark ${_blscd_dir_col_1_string}/${REPLY}]=unmarked
            [[ ${_blscd_data[search ${_blscd_dir_col_1_string}/${REPLY}]} ]] && \
                builtin unset -v "_blscd_data[search ${_blscd_dir_col_1_string}/${REPLY}]" && \
                ((++counter))
        elif [[ ${_blscd_data[mark ${_blscd_dir_col_1_string}/${REPLY}]} == unmarked ]]
        then
            _blscd_data[mark ${_blscd_dir_col_1_string}/${REPLY}]=marked
        fi
    done < <(builtin printf '%s\n' "${_blscd_files_col_2_array[@]}")

    ((counter > 0)) && \
        __blscd_p_build_array_mark_search_update

    __blscd_p_set_marking_number
}

__blscd_p_mark_screen_lines_all_unmark()
{
    builtin declare i=

    for i in "${!_blscd_data[@]}"
    do
        [[ $i =~ ^mark..*$ ]] && \
            [[ ${_blscd_data[$i]} == marked ]] && \
            _blscd_data[$i]=unmarked && \
            builtin unset -v "_blscd_data[search ${i%% *}]"
    done
}

__blscd_p_mark_screen_lines_current()
{
    if [[ ${_blscd_data[mark ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}]} == marked ]]
    then
        _blscd_data[mark ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}]=unmarked
        [[ ${_blscd_data[search ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}]} ]] && \
            builtin unset -v "_blscd_data[search ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}]" && \
            __blscd_p_build_array_mark_search_update
    elif [[ ${_blscd_data[mark ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}]} == unmarked ]]
    then
        _blscd_data[mark ${_blscd_dir_col_1_string}/${_blscd_screen_lines_current_string}]=marked
    fi

    __blscd_p_set_marking_number
}

__blscd_p_mark_screen_lines_prepare()
{
    __blscd_f_mark_screen_lines_prepare_uniq()
    {
        builtin declare -a "array1=()"
        builtin declare -A array2
        builtin declare i=

        array1=($@)
        for i in "${array1[@]}"
        do
            array2[$i]=$i
        done
        builtin printf '%s\n' "${array2[@]}"
    }

    builtin mapfile -t _blscd_files_col_2_array_mark_indexes \
        < <(__blscd_f_order_num_asc \
                "$(__blscd_f_mark_screen_lines_prepare_uniq \
                "${_blscd_files_col_2_array_mark_indexes[@]}")")
}

__blscd_p_move_col_2_line()
{
    __blscd_p_set_action_last

    builtin declare -i \
        arg=$1 \
        difference= \
        max_cursor=$((_blscd_screen_lines_browser_col_2_visible - 1)) \
        max_index=$((_blscd_files_col_2_array_total - _blscd_screen_lines_browser_col_2_visible + 1)) \
        old_index=$_blscd_index \
        step=

    _blscd_redraw=_blscd_redraw

    # Add the argument to the current _blscd_cursor
    _blscd_cursor=$((_blscd_cursor + arg))

    if ((_blscd_cursor >= _blscd_screen_lines_browser_col_2_visible))
    then
        # _blscd_cursor moved past the bottom of the list.
        if ((_blscd_screen_lines_browser_col_2_visible >= _blscd_files_col_2_array_total))
        then
            # The list fits entirely on the screen.
            _blscd_index=1
        else
            # The list doesn't fit on the screen.
            if ((_blscd_index + _blscd_cursor > _blscd_files_col_2_array_total))
            then
                # _blscd_cursor out of bounds. Put it at the very bottom.
                _blscd_index=$max_index
            else
                # Move the _blscd_index down so the visible part of the list,
                # also shows the _blscd_cursor.
                difference=$((_blscd_screen_lines_browser_col_2_visible - 1 - _blscd_cursor))
                _blscd_index=$((_blscd_index - difference))
            fi
        fi
        # In any case, place the _blscd_cursor on the last file.
        _blscd_cursor=$max_cursor
    elif ((_blscd_cursor <= 0))
    then
        # _blscd_cursor is above the list, so scroll up.
        _blscd_index=$((_blscd_index + _blscd_cursor))
        _blscd_cursor=0
    fi

    # The _blscd_index should always be >0 and <$max_index.
    ((_blscd_index > max_index)) && _blscd_index=$max_index
    ((_blscd_index < 1)) && _blscd_index=1

    ((_blscd_index != old_index)) &&
    {
        # _blscd_redraw if the _blscd_index (and thus the visible files) has changed.
        _blscd_reprint=_blscd_reprint

        # Jump a step when scrolling.
        if ((_blscd_index > old_index))
        then
            # Jump a step down.
            step=$((max_index - _blscd_index))
            ((step > _blscd_INT_step)) && step=$_blscd_INT_step
            _blscd_index=$((_blscd_index + step))
            _blscd_cursor=$((_blscd_cursor - step))
        else
            # Jump a step up.
            step=$((_blscd_index - 1))
            ((step > _blscd_INT_step)) && step=$_blscd_INT_step
            _blscd_index=$((_blscd_index - step))
            _blscd_cursor=$((_blscd_cursor + step))
        fi
    }

    # The _blscd_index should always be >0 and <$max_index.
    ((_blscd_index > max_index)) && _blscd_index=$max_index
    ((_blscd_index < 1)) && _blscd_index=1
}

__blscd_p_move_col_2_line_time_newest()
{
    builtin declare -i \
        i= \
        j=

    [[ ${#_blscd_files_col_2_array_time[@]} -eq 0 || \
            $_blscd_action_last != __blscd_p_move_col_2_line ]] && \
        __blscd_p_build_array_time

    builtin mapfile -t _blscd_files_col_2_array_time \
        < <(builtin printf '%s\n' "${_blscd_files_col_2_array_time[-1]}"
            for ((i=0 ; i <= ${#_blscd_files_col_2_array_time[@]}-2 ; i++))
            do
                builtin printf '%s\n' "${_blscd_files_col_2_array_time[$i]}"
            done)

    j=${_blscd_files_col_2_array_time[0]##*000}

    if ((j < (_blscd_cursor + _blscd_index)))
    then
        __blscd_p_move_col_2_line "-$((_blscd_cursor + _blscd_index - j))"
    elif ((j > (_blscd_cursor + _blscd_index)))
    then
        __blscd_p_move_col_2_line "$((j - _blscd_index - _blscd_cursor))"
    fi
}

__blscd_p_move_col_2_line_time_oldest()
{
    builtin declare -i \
        i= \
        j=

    if [[ ${#_blscd_files_col_2_array_time[@]} -eq 0 || \
            $_blscd_action_last != __blscd_p_move_col_2_line ]]
    then
        __blscd_p_build_array_time
    else
        builtin mapfile -t _blscd_files_col_2_array_time \
            < <(for ((i=1 ; i <= ${#_blscd_files_col_2_array_time[@]}-1 ; i++))
                do
                    builtin printf '%s\n' "${_blscd_files_col_2_array_time[$i]}"
                done
                builtin printf '%s\n' "${_blscd_files_col_2_array_time[0]}")
    fi

    j=${_blscd_files_col_2_array_time[0]##*000}

    if ((j < (_blscd_cursor + _blscd_index)))
    then
        __blscd_p_move_col_2_line "-$((_blscd_cursor + _blscd_index - j))"
    elif ((j > (_blscd_cursor + _blscd_index)))
    then
        __blscd_p_move_col_2_line "$((j - _blscd_index - _blscd_cursor))"
    fi
}

__blscd_p_move_dir()
{
    __blscd_p_set_resize 1

    __blscd_p_move_dir_up()
    {
        __blscd_p_set_action_last
        _blscd_index=1
        _blscd_cursor=0
    }

    __blscd_p_move_dir_down()
    {
        __blscd_p_set_action_last
        _blscd_index=1
        _blscd_cursor=0
    }

    if [[ $1 == .. ]]
    then
         __blscd_p_move_dir_up
    else
         __blscd_p_move_dir_down
    fi

    _blscd_dir_last=$_blscd_dir_col_1_string
    builtin cd -- "$1"
}

__blscd_p_on_exit()
{
    command stty $_blscd_saved_stty
    builtin eval "$_blscd_saved_traps"
    builtin printf "${_blscd_tput_clear}${_blscd_tput_ealt}${_blscd_tput_show}${_blscd_tput_am_on}"
    __blscd_p_declare_unset
}

__blscd_p_open_console()
{
    builtin declare console_command_arguments=

    builtin printf "$_blscd_tput_cup_99999_0"
    command stty $_blscd_saved_stty
    builtin read -e -p ":" -i \
            "${_blscd_console_command_name:+${_blscd_console_command_name} ${_blscd_search_pattern}}" \
            _blscd_console_command_name \
            console_command_arguments
    command stty -echo

    if [[ $console_command_arguments ]]
    then
        case $_blscd_console_command_name in
            search)
                __blscd_p_search
                ;;
            *)
                __blscd_p_set_action_last
                __blscd_p_set_resize 1
                ;;
        esac
    else
        __blscd_p_set_action_last
        __blscd_p_set_resize 1
    fi

    _blscd_console_command_name=
}

__blscd_p_open_file()
{
    case $(command file --mime-type -bL "$1") in
        inode/directory)
            __blscd_p_move_dir "$1"
            ;;
        image*)
            __blscd_p_set_action_last
            command w3m -o 'ext_image_viewer=off' \
                    -o 'imgdisplay=w3mimgdisplay' "$1"
            ;;
        *)
            __blscd_p_set_action_last
            builtin eval "$_blscd_opener" 2>/dev/null
            ;;
    esac
}

__blscd_p_open_shell()
{
    __blscd_p_set_action_last
    command stty $_blscd_saved_stty
    builtin printf "$_blscd_tput_ealt"
    command "${SHELL:-bash}"
    command stty -echo
}

__blscd_f_order_num_asc()
{
    builtin declare -a "array=()"
    builtin declare \
        i= \
        j= \
        element=

    array=($@)
    for ((i=1 ; i < ${#array[@]} ; ++i))
    do
        for ((j=i ; j > 0 ; --j))
        do
            element=${array[j]}
            ((${element%%,*} < ${array[j-1]%%,*})) && \
                    { array[j]=${array[j-1]} ; array[j-1]=$element ; }
        done
    done
    builtin printf '%s\n' "${array[@]}"
}

__blscd_p_reload()
{
    __blscd_p_search_marking_non
    _blscd_redraw_number=0
    builtin unset -v _blscd_data
    builtin declare -gA _blscd_data
}

__blscd_p_search()
{
    __blscd_p_set_action_last
    _blscd_block=
    _blscd_search_pattern=$console_command_arguments
    __blscd_p_set_resize 1
    __blscd_p_move_col_2_line -9999999999
    __blscd_p_draw_screen_check
    __blscd_p_move_col_2_line "$((${_blscd_files_col_2_array_mark_indexes[0]} - 1))"
}

__blscd_p_search_marking_non()
{
    _blscd_search_pattern=
    _blscd_block=
    _blscd_marking=
    _blscd_files_col_2_array_mark_indexes=()
}

__blscd_p_set_action_last() { _blscd_action_last=${FUNCNAME[1]} ; }

__blscd_p_set_marking_number()
{
    declare i=

    _blscd_marking_number=0

    for i in "${!_blscd_data[@]}"
    do
        [[ $i =~ ^mark..*$ ]] && \
            [[ ${_blscd_data[$i]} == marked ]] && \
            ((++_blscd_marking_number))
    done

    if ((_blscd_marking_number == 0))
    then
        __blscd_p_search_marking_non
    else
        _blscd_marking=_blscd_marking
        _blscd_block=_blscd_block
    fi
}

__blscd_p_set_resize()
{
    if (($1 == 1))
    then
        _blscd_redraw=_blscd_redraw
        _blscd_reprint=_blscd_reprint
    else
        _blscd_redraw=
        _blscd_reprint=
    fi
}

# -- MAIN.

# Simple.
if [[ $1 =~ (-h|--help) ]]
then
    __blscd_f_help
    builtin return 1 2>/dev/null
elif [[ $1 =~ (-v|--version) ]]
then
    __blscd_f_version
    builtin return 1 2>/dev/null
fi
(($? == 1)) && builtin exit 0

# Global Declaration.
__blscd_p_declare_set

# Go to the alternate screen and change the terminal enviroment.
builtin printf "$_blscd_tput_alt"
command stty -echo

#trap 'printf "$_blscd_tput_ealt"' EXIT
builtin trap \
        '__blscd_p_set_resize 1;builtin printf "${_blscd_tput_cup_99999_0}${_blscd_tput_eel}"' SIGWINCH
builtin trap 'printf "$_blscd_tput_clear"' SIGINT
builtin trap '' SIGALRM

while builtin :
do
    builtin printf "${_blscd_tput_hide}${_blscd_tput_am_off}"
    ((_blscd_redraw_number == 0)) && \
        __blscd_p_build_array_ini
    __blscd_p_draw_screen_check
    builtin read -s -n 1 _blscd_input
    builtin read -s -N 1 -t 0.0001 _blscd_k1
    builtin read -s -N 1 -t 0.0001 _blscd_k2
    builtin read -s -N 1 -t 0.0001 _blscd_k3
    _blscd_input=${_blscd_input}${_blscd_k1}${_blscd_k2}${_blscd_k3}
    case $_blscd_input in
        j|$'\e[B')
            __blscd_p_move_col_2_line 1
            ;;
        k|$'\e[A')
            __blscd_p_move_col_2_line -1
            ;;
        h|$'\e[D')
            __blscd_p_move_dir ..
            ;;
        l|$'\e[C')
            __blscd_p_open_file "$_blscd_screen_lines_current_string"
            builtin printf "$_blscd_tput_alt"
            __blscd_p_set_resize 1
            ;;
        $'\x06'|$'\e[6~') # Ctrl+F <PAGE-DOWN>
            __blscd_p_move_col_2_line "${_blscd_screen_lines_browser}"
            ;;
        $'\x02'|$'\e[5~') # Ctrl+B <PAGE-UP>
             __blscd_p_move_col_2_line "-${_blscd_screen_lines_browser}"
            ;;
        $'\e[H') # <HOME>
            __blscd_p_move_col_2_line -9999999999
            ;;
        G|$'\e[F') # <END>
            __blscd_p_move_col_2_line 9999999999
            ;;
        J)
            __blscd_p_move_col_2_line "$((_blscd_screen_lines_browser / 2))"
            ;;
        K)
            __blscd_p_move_col_2_line "-$((_blscd_screen_lines_browser / 2))"
            ;;
        d)
            __blscd_p_move_col_2_line 5
            ;;
        D)
            __blscd_p_move_col_2_line 10
            ;;
        u)
            __blscd_p_move_col_2_line -5
            ;;
        U)
            __blscd_p_move_col_2_line -10
            ;;
        g)
            builtin read -n 1 _blscd_input
            case $_blscd_input in
                g)
                    __blscd_p_move_col_2_line -9999999999 ;;
                h)
                    __blscd_p_move_dir ~ ;;
                e)
                    __blscd_p_move_dir "/etc" ;;
                u)
                    __blscd_p_move_dir "/usr" ;;
                d)
                    __blscd_p_move_dir "/dev" ;;
                l)
                    __blscd_p_move_dir "/usr/lib" ;;
                L)
                    __blscd_p_move_dir "/var/log" ;;
                o)
                    __blscd_p_move_dir "/opt" ;;
                v)
                    __blscd_p_move_dir "/var" ;;
                m)
                    __blscd_p_move_dir "/media" ;;
                M)
                    __blscd_p_move_dir "/mnt" ;;
                s)
                    __blscd_p_move_dir "/srv" ;;
                r|/)
                    __blscd_p_move_dir / ;;
                \?)
                    __blscd_f_help | \
                        command "${PAGER:-less}"
                    builtin printf "$_blscd_tput_alt"
                    __blscd_p_set_action_last
                    __blscd_p_set_resize 1
                    ;;
            esac
            ;;
        "")
            __blscd_p_mark_screen_lines_current
            __blscd_p_set_resize 1
            __blscd_p_move_col_2_line 1
            ;;
        v)
            builtin read -n 1 _blscd_input
            case $_blscd_input in
                n)
                    __blscd_p_mark_screen_lines_all_unmark
                    __blscd_p_search_marking_non
                    ;;
                v)
                    __blscd_p_mark_screen_lines_all
                    ;;
            esac
            __blscd_p_set_resize 1
            ;;
        n)
            if ((${#_blscd_files_col_2_array_mark_indexes[@]} !=0))
            then
                __blscd_p_mark_go_down
            else
                __blscd_p_move_col_2_line_time_newest
            fi
            ;;
        N)
            if ((${#_blscd_files_col_2_array_mark_indexes[@]} !=0))
            then
                __blscd_p_mark_go_up
            else
                __blscd_p_move_col_2_line_time_oldest
            fi
            ;;
        $'\x12') # CTRl+R
            __blscd_p_reload
            ;&
        $'\x0c') # CTRL+L
            __blscd_p_set_resize 1
            builtin printf "${_blscd_tput_cup_99999_0}${_blscd_tput_eel}"
            ;;
        E)
            __blscd_p_edit_file
            builtin printf "$_blscd_tput_alt"
            __blscd_p_set_resize 1
            ;;
        S)
            builtin printf "${_blscd_tput_show}${_blscd_tput_am_on}"
            __blscd_p_open_shell
            builtin printf "$_blscd_tput_alt"
            __blscd_p_set_resize 1
            ;;
        :)
            builtin printf "${_blscd_tput_show}${_blscd_tput_am_on}"
            __blscd_p_open_console
            ;;
        /)
            builtin printf "${_blscd_tput_show}${_blscd_tput_am_on}"
            _blscd_console_command_name=search
            __blscd_p_open_console
            ;;
        q)
            __blscd_p_reload
            __blscd_p_on_exit
            builtin break
            ;;
    esac
done
